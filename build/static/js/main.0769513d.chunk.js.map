{"version":3,"sources":["user-list/Users.js","user-list/Home.js","user-list/Profile.js","user-list/ProfileEdit.js","App.js","serviceWorker.js","index.js"],"names":["Users","props","data","map","user","index","react_default","a","createElement","key","className","onClick","edit","fName","lName","delete","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteUser","users","state","splice","localStorage","clear","length","setItem","JSON","stringify","setState","editUser","console","log","history","push","concat","userData","getItem","parse","Link","to","Component","Profile","handleSubmit","e","preventDefault","email","phone","address","renderInput","_e$target","target","name","value","defineProperty","onSubmit","onChange","ProfileEdit","changeUserData","onChangeSubmit","id","match","params","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0769513d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Users(props) {\n    let users = props.data;\n\n    let userList = users.map(function(user, index){\n        return (<tr key={index} className=\"userName\">\n            <td onClick={()=>props.edit(index)}>{user.fName} {user.lName}</td>\n            <td>\n                <button onClick={()=>props.delete(index)} className=\"btn btn-danger\">Delete</button>\n            </td>\n        </tr>);\n    })\n    return userList;\n}","import React, { Component } from 'react';\nimport  Users from './Users';\nimport { Link } from 'react-router-dom';\nimport './common.css';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: []\n        };\n    }\n\n    componentWillMount() {\n        let userData = localStorage.getItem('userData');\n        if(userData) {\n            this.setState({\n                users: JSON.parse(userData)\n            });\n        }\n    }\n\n    deleteUser = (user) => {\n        let users = this.state.users;\n        users.splice(user, 1);\n        localStorage.clear();\n        if(users.length > 0){\n            localStorage.setItem('userData', JSON.stringify(users));\n        }\n        this.setState({\n            users: users\n        });\n    }\n\n    editUser = (index) => {\n        console.log('hs:', this.props);\n        this.props.history.push(`/edit/${index}`);\n    }\n\n    render() {\n        // let userList = '';\n        // if(this.users !== ''){\n        //     userList = this.state.users.map(function(data, index){\n        //         console.log('data:', data);\n        //         return <Users user={data} key={index} delete={()=>this.deleteUser}/>\n        //     });\n        // }\n\n\n        return <div className=\"container\">\n            <h2 className=\"text-center\">Profile List</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/*{userList}*/}\n                    <Users data={this.state.users} delete={this.deleteUser} edit={this.editUser}/>\n                </tbody>\n            </table>\n            <div className=\"btnProfile\">\n                <Link to=\"/profile\"><button className=\"btn btn-primary\">New Profile</button></Link>\n            </div>\n        </div>\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport './common.css';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'fName': '',\n            'lName': '',\n            'email': '',\n            'phone': '',\n            'address': ''\n        }\n        this.userData = [];\n    }\n\n\n    componentDidMount() {\n        let userData = localStorage.getItem('userData');\n\n        if(userData) {\n            this.userData = JSON.parse(userData);\n        }\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let user = {\n            \"fName\": this.state.fName,\n            \"lName\": this.state.lName,\n            \"email\": this.state.email,\n            \"phone\": this.state.phone,\n            \"address\": this.state.address\n        }\n\n        this.userData.push(user);\n\n        localStorage.setItem('userData', JSON.stringify(this.userData));\n\n        this.props.history.push('/');\n    }\n\n    renderInput = (e) => {\n        let {name, value } = e.target;\n        this.setState({\n            [name] : value\n        });\n    }\n\n    render() {\n        return (<form onSubmit={this.handleSubmit} className=\"col-6 mx-auto\">\n            <div className=\"form-group\">\n                <label>First Name:</label>\n                <input name=\"fName\" value={this.state.fName} onChange={this.renderInput} className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label>Last Name:</label><input name=\"lName\" value={this.state.lName} onChange={this.renderInput} className=\"form-control\"/>\n            </div>\n            <div>\n                <label>Email:</label><input name=\"email\" value={this.state.email} onChange={this.renderInput} className=\"form-control\"/>\n            </div>\n            <div>\n                <label>Phone:</label><input name=\"phone\" value={this.state.phone} onChange={this.renderInput} className=\"form-control\"/>\n            </div>\n            <div>\n                <label>Address:</label><input name=\"address\" value={this.state.address} onChange={this.renderInput} className=\"form-control\"/>\n            </div>\n            <div className=\"mt-4\">\n                <button className=\"btn btn-primary btnSbt\">Submit</button>\n                <Link to=\"/\"><button className=\"btn btn-warning btnHome\">Home</button></Link>\n            </div>\n        </form>);\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ProfileEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.user = '';\n        this.state = {\n            'fName': '',\n            'lName': '',\n            'email': '',\n            'phone': '',\n            'address': ''\n        }\n        this.id = '';\n    }\n\n    componentWillMount() {\n        this.id = this.props.match.params.id;\n\n        let userData = localStorage.getItem('userData');\n        this.user = JSON.parse(userData)[this.id];\n        this.setState({\n            'fName': this.user.fName,\n            'lName': this.user.lName,\n            'email': this.user.email,\n            'phone': this.user.phone,\n            'address': this.user.address\n        });\n\n    }\n\n    changeUserData = (e) => {\n        e.preventDefault();\n        let {name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onChangeSubmit = (e) => {\n        e.preventDefault();\n        let userData = localStorage.getItem('userData');\n        if(userData){\n            userData = JSON.parse(userData);\n        }\n        userData.splice(this.id, 1);\n        userData.splice(this.id, 0, {\n            'fName': this.state.fName,\n            'lName': this.state.lName,\n            'email': this.state.email,\n            'phone': this.state.phone,\n            'address': this.state.address\n        })\n        localStorage.clear();\n        localStorage.setItem('userData', JSON.stringify(userData));\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        console.log('edit:', this.props.match.params.id);\n        return (<form onSubmit={this.onChangeSubmit} className=\"col-9 mx-auto\">\n            <div className=\"form-group\">\n                <label>First Name:</label><input name=\"fName\" value={this.state.fName} onChange={this.changeUserData} className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label>Last Name:</label><input name=\"lName\" value={this.state.lName} onChange={this.changeUserData} className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label>Email:</label><input name=\"email\" value={this.state.email} onChange={this.changeUserData} className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label>Phone:</label><input name=\"phone\" value={this.state.phone} onChange={this.changeUserData} className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label>Address:</label><input name=\"address\" value={this.state.address} onChange={this.changeUserData} className=\"form-control\"/>\n            </div>\n            <div>\n                <button onClick={this.onChangeSubmit} className=\"btn btn-primary btnSbt\">Update</button>\n                <Link to=\"/\"><button className=\"btn btn-outline-primary btnHome\">Home</button></Link>\n            </div>\n\n        </form>);\n    }\n}\n\nexport default ProfileEdit;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './user-list/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Profile from './user-list/Profile';\nimport ProfileEdit from './user-list/ProfileEdit';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/edit/:id\" component={ProfileEdit} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}